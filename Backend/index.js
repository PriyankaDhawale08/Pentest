const express = require("express");
const path = require("path");
const app = express();
const LogInCollection = require("./mongodb"); // Update with the correct path to your MongoDB connection file

const port = process.env.PORT || 4000;

app.use(express.json());
app.use(express.urlencoded({ extended: false }));

// Serve the static files from the React app
const buildPath = path.join(__dirname, '..', 'frontend', 'build');
app.use(express.static(buildPath));

// API Routes
app.post('/SignUp', async (req, res) => {
    const data = {
        name: req.body.name,
        password: req.body.password
    };

    try {
        const checking = await LogInCollection.findOne({ name: req.body.name });

        if (checking) {
            if (checking.password === req.body.password) {
                res.send("User details already exist");
            } else {
                res.send("User already exists with a different password");
            }
        } else {
            await LogInCollection.insertMany([data]);
            res.status(201).json({ message: "Signup successful" });
        }
    } catch (error) {
        console.error(error);
        res.send("An error occurred while processing your request.");
    }
});

app.post('/login', async (req, res) => {
    try {
        const check = await LogInCollection.findOne({ name: req.body.name });

        if (check) {
            if (check.password === req.body.password) {
                res.status(201).json({ message: "Login successful", name: req.body.name });
            } else {
                res.send("Incorrect password");
            }
        } else {
            res.send("User not found");
        }
    } catch (e) {
        console.error(e);
        res.send("An error occurred while processing your request.");
    }
});

// All other requests should return the React app, allowing React Router to handle routing
app.get('*', (req, res) => {
    res.sendFile(path.resolve(buildPath, 'index.html'));
});

app.listen(port, () => {
    console.log(`Server running on port ${port}`);
});
